<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="topictype" content="Uc" />
<meta name="devlang" content="ws" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating Java Based Application Class</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating Java Based Application Class</h1>		
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- ========== ========== ========== ========== ========== ========== ========== ========== ========== ========== -->

<table class="abstract">
	<tr>
		<td>
			<h2>Abstract</h2>
			<p>This article describes how to build a Java based application class, the main class of a 
            Java client application. It is an illustration of the  technical article [<a href="#References">1</a>] describing a
			Java client application created for the 3DSpace service. </p>
			<p>This use case is the main of the "Creating Java Based Specific Client Class" use case [<a href="#References">2</a>] . </p>
			<ul>
				<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
				<li><a href="#UseCase">The CAAi3DX3DSpaceClientBatch Use Case</a>
				<ul>
					<li><a href="#What">What Does CAAi3DX3DSpaceClientBatch Do</a></li>
					<li><a href="#How">How to Launch CAAi3DX3DSpaceClientBatch</a></li>
					<li><a href="#Where">Where to Find the CAAi3DX3DSpaceClientBatch Code</a></li>
				</ul>
				</li>
				<li><a href="#Step">Step-by-Step</a></li>
				<li><a href="#InShort">In Short</a></li>
				<li><a href="#References">References</a></li>
			</ul>
		</td>
	</tr>
</table>
<!-- ========== ========== ========== ========== ========== ========== ========== ========== ========== ========== -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to show you how to create the main java class for a Java based client application consuming 3DSpace web services.</p>
<p>You will learn also how to enable the HTTPP requests to be visible through a network traffic analyzer. </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- ========== ========== ========== ========== ========== ========== ========== ========== ========== ========== -->
<h2><a name="UseCase"></a>The CAAi3DX3DSpaceClientBatch Use Case</h2>
<p>CAAi3DX3DSpaceClientBatch is a use case of the CAAi3DXWebServicesClient.edu framework.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- ========== ========== ========== ========== ========== ========== ========== ========== ========== ========== -->
<h3><a name="What"></a>What Does CAAi3DX3DSpaceClientBatch Do</h3>
<p>This use case creates the <code>CAAi3dxMain</code> class which is an executable. It performs in this order:</p>
<ul>
<li>A <b>3D</b>EXPERIENCE platform authentication (3DPassport login),</li>
<li>A "GET" 3DSpace web service consumption to display its backend response in an output file</li>
<li>A <b>3D</b>EXPERIENCE platform logout (3DPassport logout).</li>
</ul> 
<p>An example of output file is given is the <a href="#CheckResult">Check the Result</a> section of the <a href="#How">How to Launch</a> part.</p>
<p>The </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- ========== ========== ========== ========== ========== ========== ========== ========== ========== ========== -->
<h3><a name="How"></a>How to Launch CAAi3DX3DSpaceClientBatch</h3>
<p>To launch CAAi3DX3DSpaceClientBatch, you will need to set up the build time environment, then 
compile CAAi3DX3DSpaceClientBatch along with its <a href="#BTPre-req">prerequisites</a>, <a href="#How-set">set up the run time environment</a>, 
and then <a href="#How-exe">execute the use case</a>.  
</p>
<p><a name="How-set"></a><b>Set up the run time environment</b></p>
<p>Launching the use case is done via <code>java</code> standard command. 
In order for java to find the <em>.class</em> files generated on compilation, you may need to 
arrange the <code>$CLASSPATH</code> variable. 
The jar file paths to append are:</p>
<pre class="code">
<b>$WS\win_b64\docs\javacommon\javax.json.jar;</b>
$WS\win_b64\docs\java\CAAi3DX3DSpaceClientBatch.jar;
$WS\win_b64\docs\java\CAAi3DXJavaClient.jar;
</pre>
<p>Where <code>$WS</code> is the path of your workspace. If the last two jar come from the compilation of the 
CAAi3DXWebServicesClient.edu framework, the first one is the jar containing the json-api implementation. 
You can retrieve one version from internet.</p>
<p><a name="How-exe"></a><b>Execute the use case</b></p>
<pre class="code">
java com.dassault_systemes.caasamples.i3dxsamples.CAAi3dxMain 
                        %3DPassport_url%  %login%   %password%  
                        %3DSpace_url%     %security_context% 
                        %output_dir%     [%app_path%]   [%platform_instance%]  
</pre>
<p>Where</p>
<table class="fill">
<tr>
  <th>argument</th>
  <th>meaning</th>
</tr>
<tr>
  <td>3DPassport_url</td>
  <td>The 3DPassport URL of a <b>3D</b>EXPERIENCE platform. The URL can or cannot contain a final / char.</td>
</tr>
<tr>
  <td>login</td>
  <td>A valid login for the given <b>3D</b>EXPERIENCE platform</td>
</tr>
<tr>
  <td>password</td>
  <td>The password of the login.</td>
</tr>
<tr>
  <td>3DSpace_url</td>
  <td>The 3DSpace URL of the same <b>3D</b>EXPERIENCE platform. The URL must not finish with the / char.</td>
</tr>
<tr>
  <td>security_context</td>
  <td>A string with this format: role.organization.collabspace, or between quote if space chars 
  in one component of the security context. Do not encode the value. The UTF8 encodage will be performed internally.</td>
</tr>
<tr>
  <td>output_dir</td>
  <td>Directory for traces of HTTPS requests and responses. Do not append / at the end, the program appends it.</td>
</tr>
<tr>
  <td>app_path</td>
  <td>The path of a "GET" 3DSpace web service. It should be <i>/resources/...</i>.</p>
  <p>It is a facultative argument. 
  By defaut it is <i>/resources/caasample/basicrestws/User</i>, a web service 
   created  by another CAA use case [<a href="#References">3</a>].</p>
   <p>For a cloud environment, do not forget to append the tenant parameter to the path.
 </td>
</tr>
<tr>
  <td>platform_instance</td>
  <td>The platform instance (or tenant) is mandatory for cloud, but optional for OnPremise environment.</td>
</tr>
</table>
<p><a name="CheckResult"></a><b>Check the result</b></p>
<p>For such a launch (with default resource path and no tenant value):</p>
<pre class="code">
java  com.dassault_systemes.caasamples.i3dxsamples.CAAi3dxMain 
        https://.../iam  X1 passwordX1 
        https://.../3DSpace 
        "VPLMProjectLeader.MyCompany.3DS Private Collab Space" e:\WS\...\testUC 
</pre>
<p>The output traces are (<a href="#Fin">*</a>):</p>
<pre class="code">
## Getting input arguments :
 catch 3DPassport URL =https://.../iam
 catch user login=X1
 catch user passport=passwordX1
 catch 3DSpace URL =https://.../3DSpace 
 catch Security Context (role.organization.collabspace) =VPLMProjectLeader.MyCompany.3DS Private Collab Space
 catch output directory=e:\WS\...\testUC\
 default application path: /resources/caasample/basicrestws/User
 catch platform instance: no value
## End Of arguments catching

## Login

## Consume 3DSpace Web Service

## Logout
</pre>
<p>It generates the following trace files in the output directory:
</p>
<ul>
	<li>On login <a href="samples/CAALogin.traces.txt">login.traces</a></li>
	<li>On 3DSpace Web Service Consomption <a href="samples/CAAapi_get_ws.traces.txt">api_get_ws.traces</a></li>
	<li>On logout <a href="samples/CAALogout.traces.txt">logout.traces</a></li>
</ul>
<p>A trace file contains traces for each request and response:
</p>
<ul>
	<li>For a request is displayed:
		<ul>
			<li>The request URL and method</li>
			<li>A part of the request header fields (only the explicitly set ones)</li>
			<li>The body if any</li>
		</ul>
	</li>
	<li>For a response is displayed:
		<ul>
			<li>The response header fields (all)</li>
			<li>The response status code and the response message and if exists, the body.</li>
			<li>The response stream (body) if it exists.</li>
		</ul>
	</li>
</ul>
<p><a name="Fin"></a>(*) If the jar of the CAA use case has not been deployed on the 3DSpace server, the backend response 
will be:</p>
<pre class="code">
## Getting input arguments :
 catch 3DPassport URL =https://.../iam
 catch user login=X1
 catch user passport=passwordX1
 catch 3DSpace URL =https://.../3DSpace 
 catch Security Context (role.organization.collabspace) =VPLMProjectLeader.MyCompany.3DS Private Collab Space
 catch output directory=e:\WS\...\testUC\
 default application path: /resources/caasample/basicrestws/User
 catch platform instance: no value
## End Of arguments catching

## Login

## Consume 3DSpace Web Service
##[ERROR] WS Response Code=404- Not Found
</pre>
<p>And the output file is <a href="samples/CAAapi_get_ws.traces_KO.txt">api_get_ws.traces</a>. </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- ========== ========== ========== ========== ========== ========== ========== ========== ========== ========== -->
<h3><a name="Where"></a>Where to Find the CAAi3DX3DSpaceClientBatch Code</h3>
<p>The CAAi3DX3DSpaceClientBatch use case is made of one class located in the 
CAAi3DXWebServicesClient.edu framework:</p>
<pre class="code">InstallRootFolder\CAADoc\CAAi3DXWebServicesClient.edu\CAAi3DX3DSpaceClientBatch.mj\src\$PATH\CAAi3dxMain.java</code> 
</pre>

<p>Where <code>InstallRootFolder</code> is the folder where the API CD-ROM is installed, and $PATH=<code>com\dassault_systemes\caasamples\i3dxsamples</code>. </p>
<p><a name="BTPre-req"></a><b>Build time prerequisites</b> </p>
<p>In order to build the use case java module you need these two others modules of the same framework:</p>
<ul>
<li>CAAi3DXJavaClient.mj</li>
<li>CAAjavax.json-api.mjext</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- ========== ========== ========== ========== ========== ========== ========== -->

<h2><a name="Step"></a>Step-by-Step</h2>
<p>The logical steps of  CAAi3DX3DSpaceClientBatch are:</p>
<ol>
	<li><a href="#Step1">Creating CAAi3dxMain Class Structure</a></li>
	<li><a href="#Step0">Enabling Network Traffic Analyzer</a></li>
	<li><a href="#Step2">Instantiating Client Class Instances</a></li>
	<li><a href="#Step3">Login</a></li>
	<li><a href="#Step4">Consuming 3DSpace Web Service</a></li>
	<li><a href="#Step5">Logout</a></li>
</ol>
<script type="text/javascript">insertLinkToTop();</script>
<!-- ========== =========== ========== ========== ========== ========== ========== -->
<h3><a name="Step1"></a>Creating CAAi3dxMain class structure</h3>
<p>The contents of the Java file is as follows: </p>
<pre class="code">
package com.dassault_systemes.caasamples.i3dxsamples;

import javax.json.JsonObject;

public class  CAAi3dxMain
{	 
    public static void <b>main(String[] args) </b> {
        try {
            1- Decoding Input arguments 

            2- <a href="#Step0">Enabling Network Traffic Analyzer</a>
			
            3- <a href="#Step2">Instantiating Client Class Instances</a>

            4- <a href="#Step3">Login</a>

            5- <a href="#Step4">Consuming 3DSpace Web Service</a>

            6- <a href="#Step5">Logout</a>

            System.exit(0);

        } catch (ArrayIndexOutOfBoundsException e) {
            // if one mandatory argument is missing
            String strHelp = "java com.dassault_systemes.caasamples.i3dxsamples.CAAi3dxMain "; 
            strHelp += "... " ;
            System.err.println("##[ERROR] Expected:\n" + strHelp );
        } catch (Throwable t) {           
            System.err.println("##[ERROR] " + t.getMessage());
        } finally {
            System.err.flush();
            System.exit(1);
        }
    }
}
</pre>
<p>It only contains the main method. Its arguments are the batch inputs. </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- ========== =========== ========== ========== ========== ========== ========== -->
<h3><a name="Step0"></a>Enabling Network Traffic Analyzer</h3>
<p>A network traffic analyser can be used to see all interactions described in this article. It becomes a must to have when it comes to debugging client applications.</p>
<p>Fiddler is a free and easy to use network analyser running under Windows (Linux users may check for Wireshark). To use it simply add the following lines to your client application:</p>
<pre class="code">
System.setProperty("proxyHost", "localhost");
System.setProperty("proxyPort", "8888");
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- ========== ========== ========== ========== ========== ========== ========== ========== ========== ========== -->
<h3><a name="Step2"></a>Instantiating Clients Class Instances</h3>
<p>The application uses two  Java client classes to consume web services: the first to perform the 3DPassport login 
(<code>CAAi3dxLoginClient</code>) , and the 
second for the 3DSpace web service (<code>CAAi3dxGetWebServicesClient</code>).  </p>
<pre class="code">
    CAAi3dxClient       client         = new CAAi3dxClient(space3ds_server, pass3ds_server, output_dir,tenant);
    CAAi3dxLoginClient 	client_login   = new CAAi3dxLoginClient(client);
    CAAi3dxGetWebServicesClient client_GetWS = new CAAi3dxGetWebServicesClient(client,app_path);
</pre>
<ul>
<li><code>CAAi3dxClient</code> is the class containing the data
shared by the specific client classes. Its arguments are the batch inputs. Click <a href="CAAi3DXTaJavaClientApp.htm#CAAi3dxClient">here</a> for details about this class.</li>
<li><code>CAAi3dxLoginClient</code> is the client class for performing the login to the <b>3D</b>EXPERIENCE platform.  
Click <a href="CAAi3DXTaJavaClientApp.htm#CAAi3dxLoginClient">here</a> for details about this class. </li>
<li><code>CAAi3dxGetWebServicesClient</code> is the client class for consuming the 3DSpace web service with GET as verb. It is a class defined in the "Creating Java Based Specific Client Class" use case [<a href="#References">2</a>]. 
</li>
</ul>
<p>
<p>All the classes are included in the <code>com.dassault_systemes.caasamples.i3dxsamples</code> package. </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- ========== ========== ========== ========== ========== ========== ========== ========== ========== ========== -->
<h3><a name="Step3"></a>Login</h3>
<p>The <i>login</i> method of the <code>CAAi3dxLoginClient</code>  class  is called with the login and the password of someone. These two data are batch inputs.</p> 
<pre class="code">client_login.login(username, password);</pre>

<script type="text/javascript">insertLinkToTop();</script>
<!-- ========== ========== ========== ========== ========== ========== ========== ========== ========== ========== -->
<h3><a name="Step4"></a>Consuming 3DSpace web service</h3>
<p>The <i>Run</i> method of the <code>CAAi3dxGetWebServicesClient</code>  class  with the security context as input (also a batch input). </p> 
<pre class="code">
client_GetWS.Run(security_context) ;
</pre>
<p> The <em>Run</em> method consumes the web service, and displays the backend response in an output file .</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- ========== ========== ========== ========== ========== ========== ========== ========== ========== ========== -->
<h3><a name="Step5"></a>Logout</h3>
<p>The <i>logout</i> method of the <code>CAAi3dxLoginClient</code>  class  is called without argument.</p>  
<pre class="code">client_login.logout();</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- ========== ========== ========== ========== ========== ========== ========== ========== ========== ========== -->
<h2><a name="InShort"></a>In Short</h2>
<p></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- ========== ========== ========== ========== ========== ========== ========== ========== ========== ========== -->

<h2><a name="References"></a>References</h2>
<table class="reference">
    	<tr>
		<td>[1]</td>
		<td><a href="CAAi3DXTaJavaClientApp.htm">Presenting Batch Client Application Example</a></td>
	</tr>
    <tr>
		<td>[2]</td>
		<td><a href="CAAi3DXUcJavaClientClass.htm">Creating Java Based Specific Client Class</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td><a href="#" onclick="CAAlinkOutOfPreqs('CAAi3DX3DREST/CAAi3DXUcConnectedUserWS.htm'); return false">Creating a 3DSpace REST Web Service</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [January 2016]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>
</body>
</html>
