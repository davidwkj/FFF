<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="topictype" content="Uc" />
<meta name="devlang" content="cpp" />
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Revolution</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Revolution</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>A Revolution surface is generated by the rotation of&nbsp; a wire 
		profile around an axis. Revolution surface can be created with different 
		type of limitation of each extremity along the extrusion.</p>
		<ul>
			<li><a href="#OpeToBeUsed">Operator to be Used</a></li>
			<li><a href="#UseCaseDescription">Use Case Description</a></li>
			<li><a href="#References">References</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="OpeToBeUsed">Operator to be Used</a></h2>
<p>To create a Revolution, use the CATICGMTopRevolution operator in GMOperatorsInterfaces. 
This operator has to 
be created by the CATCGMCreateTopRevol global function.</p>
<h2><a name="UseCaseDescription">Use Case Description</a></h2>
<p>The CAAGMOperatorsRevolution.m module in CAAGMOperatorsInterfaces.edu 
illustrates how to create a revolution surface. This use case uses 
the input data RevolutionModel.NCGM which is delivered in the InputData file 
directory and containing data to be passed to the operator. If you are not already 
familiar with topological operator use cases, go to
		<a href="../CAACgmModel/CAACgmTaUseTopoOperators.htm">How to Use Topological Operators</a>.</p>
<h3>Case 1: Create a revolution surface of a body curve profile with Start and 
End angles</h3>
<p>With the input data below:</p>
<table>
  <caption><a name="Fig.1">Fig.1</a> Revolution Operation: Input Data (Wire 
  profile) </caption>
  <tr>
    <td>
    
	<img src="images/CATICGMTopRevol_imgA.jpg"></td>
  </tr>
</table>
<p>and the code below:</p>
<pre class="code">
// Create the Revolution operator
//
CATMathPoint PtOrigin(0, 0, 0);
CATMathAxis* pMathAxis = new CATMathAxis(PtOrigin);
CATAngle StartAngle = -30., EndAngle= 150.;

CATICGMTopRevol * pCGMRevolutionOper = <strong>CATCGMCreateTopRevol</strong>(piGeomFactory, 
&amp;topdata,
pBodyProfile, 	// pointer to the wire body defining the profile of the revolution. 
pMathAxis, 	// The axis system of the revolution, which third direction is the rotation axis.
StartAngle, 	// The first limitation of the rotation, measured (in degree) from each point of the profile.
EndAngle);	// The last limitation of the rotation, measured (in degree) from each point of the profile, 

...
// Run the operator
//
pCGMRevolutionOper-&gt;Run();
cout &lt;&lt; &quot;Run the operator : OK&quot; &lt;&lt; endl;

// Get The result
// 
CATBody *pCGMRevolResBody = pCGMRevolutionOper-&gt;GetResult();

pCGMRevolutionOper->Release();
pCGMRevolutionOper=NULL;</pre>
<p>you get this result:</p>
<table>
  <caption><a name="Fig.2">Fig.2</a> Result of Revolution Operation with Start 
  and End angle</caption>
  <tr>
    <td>
	<img src="images/CATCGMCreateTopRevol_imgB.jpg">&nbsp;</td>
     </tr>
</table>

<h3><a></a>Case 2: Create a revolution surface where body 
curve profile is extruded until a specified surface</h3>
<p>With the input data below:</p>
<table>
  <caption><a name="Fig.3">Fig.3</a> Revolution operation: Input Data (Wire 
  Profile and Surface limitation) </caption>
  <tr>
    <td>
    	<img src="images/CATCGMCreateTopRevol_imgC.jpg"></td>
  </tr>
</table>
<p>and the code below:</p>
<pre class="code">
 
// create the CATICGMTopRevol operator 
// 
CATICGMTopRevol * pCGMRevolutionOperUSurf = <strong>CATCGMCreateTopRevol</strong>(piGeomFactory, 
&amp;topdata, 
pBodyProfile, 
pMathAxis, 
StartAngle, 
EndAngle);
...
// Defines the type of limitation of each extremity along the extrusion (center curve) direction To be called for each extremity 
// 

CATTopLimit iId = CatLimStart;		  // The first extremity.
CATTopLimitType iType = CatLimUntil; 	  // The profile is extruded until the specified geometry or topology.
CATBoolean iIsAxisReverted = TRUE;	  // The orientation : TRUE for the same orientation as the direction defined at the operator creation (TRUE for the start)
CATLength iOffset =0.;			  // The value of the offset if iType has the value CatLimOffsetFromProfile 
CATTopPropagationType iPropagationFlag = CatPropagSingle;	// No propagation is performed
CATLength iThickness = CATLength(0);	  // defines the value of any thickness which must be applied to the considering relimitation


// Specify surface body limitation of start extremity along the extrusion
// 
pCGMRevolutionOperUSurf-&gt;<strong>SetExtrudeLimit</strong>(iId,
iType,
iIsAxisReverted,
iOffset,
iLimit,
iPropagationBody,
iPropagationFlag,
iThickness);
cout &lt;&lt; &quot;Specify surface body limitation of start extremity along the extrusion : OK&quot; &lt;&lt; endl;    

iId = CatLimEnd;
iIsAxisReverted = FALSE;

// Specify surface body limitation of end extremity along the extrusion
//

pCGMRevolutionOperUSurf-&gt;<strong>SetExtrudeLimit</strong>(iId,
iType,
iIsAxisReverted,
iOffset,
iLimit,
iPropagationBody,
iPropagationFlag,
iThickness);
cout &lt;&lt; &quot;Specify surface body limitation of end extremity along the extrusion : OK&quot; &lt;&lt; endl;  
  
// Run the operator
//
pCGMRevolutionOperUSurf-&gt;<strong>Run</strong>();
cout &lt;&lt; &quot;Run the operator : OK&quot; &lt;&lt; endl;

// Get The revolute body result
// 
CATBody *pCGMRevolResBody3 = pCGMRevolutionOperUSurf-&gt;<strong>GetResult</strong>();
pCGMRevolutionOperUSurf->Release();
pCGMRevolutionOperUSurf=NULL;</pre>
<p>you get this result:</p>
<table>
  <caption><a name="Fig.4">Fig.4</a> Result of Revolution extruded until a 
  specified surface </caption>
  <tr>
    <td>
	<img src="images/CATCGMCreateTopRevol_imgD.jpg"></td>
     </tr>
 </table>
<h2><a name="References">References</a></h2>
<div id="ref">
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
	<tr>
		<td>[2]</td>
		<td>
		<a href="../CAACgmModel/CAACgmUcGMUseCases.htm">About Geometric Modeler Use Cases</a></td>
	</tr>
	<tr>
		<td>[3]</td>
		<td>
		<a href="../CAACgmModel/CAACgmTaUseTopoOperators.htm">How to Use Topological Operators</a></td>
	</tr>

<tr>
		<td>[4]</td>
		<td>
		<a href="CAACgmUcTopOverview.htm">Overview of Topological Operators</a></td>
	</tr>
	</table>
</div>
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [May 2018]</td>
		<td>Document created</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
