<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<meta content="Uc" name="topictype" />
<meta content="cpp" name="devlang" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">/* */</script>
<title>Navigating HVAC Manufacturing Features</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top">Navigating HVAC Manufacturing Features</a></h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CAAPofHVACFeatureNav use case. This use case 
		explains how to retrieve generated fabrication information for piping fabrication.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#BeforeStarting">Before Starting</a></li>
			<li><a href="#UseCase">The CAAPofHVACFeatureNav Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAPofHVACFeatureNav Do?</a></li>
				<li><a href="#How">How to Launch CAAPofHVACFeatureNav?</a></li>
				<li><a href="#Where">Where to Find the CAAPofHVACFeatureNav Code?</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>In this case, you will learn how to retrieve generated fabrication information 
for piping fabrication.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="BeforeStarting"></a>Before Starting</h2>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAPofHVACFeatureNav Use Case</h2>
<p>CAAPofHVACFeatureNav is a use case of the CAADELShipMfgItf.edu framework that 
illustrates the DELMIA Heavy Industry Fluidic Fabrication Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAPofHVACFeatureNav Do?</h3>
<p>This use case:</p>
<ul>
	<li>Retrieve fabrication features created by Heavy Industry Fluidic Fabrication 
	app.</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAPofHVACFeatureNav?</h3>
<p>Please refer to
<a href="#" onclick="CAAlinkOutOfPreqs('CAADELStrMfg/CAAStrMfgGeneralities.htm'); return false;">
Heavy Industry Structure Fabrication Use Cases Overview</a>.</p>
<p>The executable name is <code>CAAPofHVACFeatureNav </code>.</p>
<pre class="code"><em>mkrun -c &quot; CAAPofHVACFeatureNav Repository Server LoginTicket Process_Name PPR_Name&quot;</em></pre>
<p>* The input model is retrieved by importing the following files:</p>
<p><code>InstallRootFolder\CAADoc\CAADELShipMfgItf.edu\InputData\PPR_CAABSUTest.3dxml</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>The last 3D XML file contains the root PPR Reference which is PPR_Name with the 
following attributes:</p>
<ul>
	<li><a><code><strong>V_Name</strong></code></a>: <code>CAA_SYS_MW_CVI System 
	Data</code></li>
	<li><a><code><strong>Version</strong></code></a>: ---.000</li>
</ul>
<p>The last 3D XML file contains the root Assembly Process Reference which is Process_Name 
with the following attributes:</p>
<ul>
	<li><a><code><strong>V_Name</strong></code></a>: <code>CAA_SYS_MW_CVI System 
	Data</code></li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAPofHVACFeatureNav Code</h3>
<p>The CAAPofHVACFeatureNav sample is made of a single source code file named CAAPofHVACFeatureNav.cpp 
located in the CAAPofHVACFeatureNav.m module of the CAADELShipMfgItf.edu framework:
<code>InstallRootFolder\CAADoc\CAADELShipMfgItf.edu\CAAPofHVACFeatureNav.m\</code> 
where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>DELIPofUseFeatureAccess</em></td>
		<td>Interface being used to navigate fabrication features and its attributes.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main. There are ten logical steps in Main:</p>
<table class="fill">
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Opening the Model</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step2">Getting All the Manufactured Parts</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Filtering against Manufactured Part Types</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step4">Retrieving Outer Contour Feature</a></td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step5">Retrieving Tangent Line Features and their Attributes</a></td>
	</tr>
	<tr>
		<td>6</td>
		<td><a href="#Step6">Retrieving Alignment Line Features and their Attributes</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step7">Retrieving all Features and their Attributes</a></td>
	</tr>
	<tr>
		<td>8</td>
		<td><a href="#Step8">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Opening the Model</h3>
<p>This step is detailed in steps 1 to 8 in the
<a href="CAAPofMfgGeneralities.htm">Heavy Industry Fluidic Fabrication Use Cases 
Overview</a> page.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Getting All the Manufactured Parts</h3>
<p>Using <code>DELIShipMfgProcessNav</code>, get all the manufactured part under 
root process occurrence.</p>
<pre class="code">...
 
  //----------------------------------------------------------------------------------------
  // 1. Get root process and synchronize the occurrence tree
  //----------------------------------------------------------------------------------------
  CATIPLMNavOccurrence_var hOccRootProcess;
  CATIPLMNavOccurrence *pProcessOcc = NULL;
  rc = hProcessOccAuth-&gt;GetOrCreateRootOccurrence(spRefProcess, pProcessOcc);
  if(FAILED(rc) || !pProcessOcc) {cout &lt;&lt; "    -&gt; GetOrCreateRootOccurrence KO" &lt;&lt; endl; return E_FAIL;}

  rc = hProcessOccAuth-&gt;Synchronize(pProcessOcc);
  if(FAILED(rc) || !pProcessOcc) {cout &lt;&lt; "    -&gt; Synchronize KO" &lt;&lt; endl; return E_FAIL;}

  hOccRootProcess = pProcessOcc;

  //-----------------------------------------------------------------------------------------
  // Get ShipMfgProcessNav interface
  //-----------------------------------------------------------------------------------------
  DELIShipMfgProcessNav_var spMFGProcessNav;
 
  rc = ::GetDELShipMfgProcessNavAccess(spMFGProcessNav);
  if(FAILED(rc) || !spMFGProcessNav) return 1;
  //Get All manufactured parts
  CATLISTP(CATIPLMNavReference) oListProcessReferences;
  rc = spMFGProcessNav-&gt;GetAllFluidManufProcess(hOccRootProcess,oListProcessReferences,1);
...</pre>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Filtering against Manufactured Part Types</h3>
<p>Extand the "DELIPofUseFeatureAccess" interface on occurrences to access fabrication 
features and check the type <code>DELIPofUseFeatureAccess</code>.</p>
<pre class="code">...
  CATListPtrCATIPLMNavOccurrence RelatedOccurrencesList;
  spPlateProcessRef-&gt;ListRelatedOccurrences((CATIPLMNavReference*)spRefProcess, RelatedOccurrencesList);
   
  DELIPofUseFeatureAccess_var spFeatureAccess;

  //Extand the retrieved occurrence using DELIPofUseFeatureAccess interface to acces features.
  if(RelatedOccurrencesList.Size() &gt; 0)
    spFeatureAccess = RelatedOccurrencesList[1];

  //Check the type that user wants to deal with.
  if(spFeatureAccess != NULL_var &amp;&amp; spFeatureAccess-&gt;GetType() == DELPofMfgItem_HVAC)
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Retrieving Outer Contour Feature</h3>
<p>Retrieve outer contour features using <code>DELIPofUseFeatureAccess</code>.</p>
<pre class="code">...
  CATListValCATBaseUnknown_var ListOfOuter;

  //Retrieving outer contour features created associated with this manufactured part.
  spFeatureAccess-&gt;GetFeaturesByType(POF_USE_FT_H_CONTOUR, ListOfOuter);
  for(int nOuterCount = 1; nOuterCount &lt;= ListOfOuter.Size(); nOuterCount++)
  {
    CATICkeParm_var spParm = ListOfOuter[nOuterCount];

    if(spParm != NULL_var)
    {
      //Get the feature from CkeParm
      CATBaseUnknown_var spUnkFeat = spParm-&gt;Value()-&gt;AsObject();
      CATISpecObject_var spSOFeat = spUnkFeat;
      if(spUnkFeat != NULL_var &amp;&amp; spSOFeat != NULL_var)
      {
        CATUnicodeString sString = "[" + spSOFeat-&gt;GetType() + "]";

        ListOfResult.Append(sString);
      }
    }
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Retrieving Tangent Line Features and their Attributes</h3>
<p>Retrieve tangent line features and their attributes using <code>DELIPofUseFeatureAccess</code>.</p>
<pre class="code">...
  CATListValCATBaseUnknown_var ListOfTangent;

  //Retrieving tangent line features created associated with this manufactured part.
  spFeatureAccess-&gt;GetFeaturesByType(POF_USE_FT_H_TANGENT, ListOfTangent);
  for(int nTangentCount = 1; nTangentCount &lt;= ListOfTangent.Size(); nTangentCount++)
  {
    CATICkeParm_var spParm = ListOfTangent[nTangentCount];

    if(spParm != NULL_var)
    {
      //Get the feature from CkeParm
      CATBaseUnknown_var spUnkFeat = spParm-&gt;Value()-&gt;AsObject();
      CATISpecObject_var spSOFeat = spUnkFeat;
      if(spUnkFeat != NULL_var &amp;&amp; spSOFeat != NULL_var)
      {
        //Retrive all the attributes of the feature
        CATListValCATBaseUnknown_var ListOfFeatureAttr;
        spFeatureAccess-&gt;GetAttributesFromFeature(spUnkFeat, ListOfFeatureAttr);

        CATUnicodeString sString = "[" + spSOFeat-&gt;GetType() + "]";
        ListOfResult.Append(sString);

        for(int nAttrCount = 1; nAttrCount &lt;= ListOfFeatureAttr.Size(); nAttrCount++)
        {
          CATICkeParm_var spParm = ListOfFeatureAttr[nAttrCount];

          if(spParm != NULL_var)
          {
            //Use CkeParm name to classify attributes 
            CATUnicodeString sAttrName, sOutput;

            //To find tangent line start angle attribtue.
            if(spParm-&gt;Name().SearchSubString(POF_USE_FT_H_TANGENT_START_ANGLE) &gt;= 0)
              sAttrName = POF_USE_FT_H_TANGENT_START_ANGLE;

            //To find tangent line start radius attribtue.
            else if(spParm-&gt;Name().SearchSubString(POF_USE_FT_H_TANGENT_START_RADIUS) &gt;= 0)
              sAttrName = POF_USE_FT_H_TANGENT_START_RADIUS;

            //To find tangent line end angle attribtue.
            else if(spParm-&gt;Name().SearchSubString(POF_USE_FT_H_TANGENT_END_ANGLE) &gt;= 0)
              sAttrName = POF_USE_FT_H_TANGENT_END_ANGLE;

            //To find tangent line end radius attribtue.
            else if(spParm-&gt;Name().SearchSubString(POF_USE_FT_H_TANGENT_END_RADIUS) &gt;= 0)
              sAttrName = POF_USE_FT_H_TANGENT_END_RADIUS;
            else
              continue;

            sOutput = sString + " : " + sAttrName + " ( " + spParm-&gt;Show() + " ) ";

            cout&lt;&lt; sOutput &lt;&lt; endl;
            ListOfResult.Append(sOutput);
          }
        }
      }
    }
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Retrieving Alignment Line Features and their Attributes</h3>
<p>Retrieve alignment line features and their attributes using <code>DELIPofUseFeatureAccess</code>.</p>
<pre class="code">CATListValCATBaseUnknown_var ListOfAlignment;

  //Retrieving alignment line features created associated with this manufactured part.
  spFeatureAccess-&gt;GetFeaturesByType(POF_USE_FT_H_ALIGNMENT, ListOfAlignment);
  for(int nAlignmentCount = 1; nAlignmentCount &lt;= ListOfAlignment.Size(); nAlignmentCount++)
  {
    CATICkeParm_var spParm = ListOfAlignment[nAlignmentCount];

    if(spParm != NULL_var)
    {
      //Get the feature from CkeParm
      CATBaseUnknown_var spUnkFeat = spParm-&gt;Value()-&gt;AsObject();
      CATISpecObject_var spSOFeat = spUnkFeat;
      if(spUnkFeat != NULL_var &amp;&amp; spSOFeat != NULL_var)
      {
        //Retrive all the attributes of the feature
        CATListValCATBaseUnknown_var ListOfFeatureAttr;
        spFeatureAccess-&gt;GetAttributesFromFeature(spUnkFeat, ListOfFeatureAttr);

        CATUnicodeString sString = "[" + spSOFeat-&gt;GetType() + "]";
        ListOfResult.Append(sString);

        for(int nAttrCount = 1; nAttrCount &lt;= ListOfFeatureAttr.Size(); nAttrCount++)
        {
          CATICkeParm_var spParm = ListOfFeatureAttr[nAttrCount];

          if(spParm != NULL_var)
          {
            //Use CkeParm name to classify attributes 
            CATUnicodeString sAttrName, sOutput;

            //To find alignment line length attribtue.
            if(spParm-&gt;Name().SearchSubString(POF_USE_FT_H_ALIGNMENT_LENGTH) &gt;= 0)
              sAttrName = POF_USE_FT_H_ALIGNMENT_LENGTH;
            //To find alignment line off attribtue.
            else if(spParm-&gt;Name().SearchSubString(POF_USE_FT_H_ALIGNMENT_OFFSET) &gt;= 0)
              sAttrName = POF_USE_FT_H_ALIGNMENT_OFFSET;
            //To find alignment line text attribtue.
            else if(spParm-&gt;Name().SearchSubString(POF_USE_FT_H_ALIGNMENT_TEXT) &gt;= 0)
              sAttrName = POF_USE_FT_H_ALIGNMENT_TEXT;
            else
              continue;

            sOutput = sString + " : " + sAttrName + " ( " + spParm-&gt;Show() + " ) ";

            cout&lt;&lt; sOutput &lt;&lt; endl;
            ListOfResult.Append(sOutput);
          }
        }
      }
    }
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Retrieving all Features and their Attributes</h3>
<p>Retrieve all features and their attributes using <code>DELIPofUseFeatureAccess</code>.</p>
<pre class="code">...
  //Retrieving all the fluidic fabrication features created on this manufactured part
  CATListValCATBaseUnknown_var ListOfAllFeatures;
  spFeatureAccess-&gt;GetAllFeatures(ListOfAllFeatures);

  for(int i = 1; i &lt;= ListOfAllFeatures.Size(); i++)
  {
    CATICkeParm_var spParm = ListOfAllFeatures[i];

    if(spParm != NULL_var)
    {
      //Get the feature from CkeParm
      CATBaseUnknown_var spUnkFeat = spParm-&gt;Value()-&gt;AsObject();
      CATISpecObject_var spSOFeat = spUnkFeat;
      if(spUnkFeat != NULL_var &amp;&amp; spSOFeat != NULL_var)
      {
        //Retrive all the attributes of the feature
        CATListValCATBaseUnknown_var ListOfFeatureAttr;
        spFeatureAccess-&gt;GetAttributesFromFeature(spUnkFeat, ListOfFeatureAttr);

        for(int nAttrCount = 1; nAttrCount &lt;= ListOfFeatureAttr.Size(); nAttrCount++)
        {
          CATICkeParm_var spParm = ListOfFeatureAttr[nAttrCount];

          if(spParm != NULL_var)
          {
            CATUnicodeString sString = "[" + spSOFeat-&gt;GetType() + "] : ";

            sString = sString + spParm-&gt;Name();
            sString = sString + " =&gt; ";
            sString = sString + spParm-&gt;Show();
            cout&lt;&lt; sString &lt;&lt; endl;
            ListOfResult.Append(sString);
          }
        }
      }
    }
  }

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Disconnecting and Deleting the Session</h3>
<p>Refer to the last step 9 in the <a href="CAAPofMfgGeneralities.htm">Heavy Industry 
Fluidic Fabrication Use Cases Overview</a> page.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to retrieve fabrication features generated 
by Heavy Industry Fluidic Fabrication app feature line.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Sep 2017]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
